# Variables for the Galaxy project role
galaxy_config_style: yaml
galaxy_layout: custom
galaxy_server_dir: "{{ _galaxy_root }}/server"
galaxy_root: "{{ galaxy_server_dir }}"  # workaround for a known issue https://github.com/galaxyproject/ansible-galaxy/issues/138
galaxy_manage_systemd: false
galaxy_venv_dir: "{{ _galaxy_root }}/venv"
galaxy_config_dir: "{{ _galaxy_root }}/config"
galaxy_mutable_data_dir: "{{ src_galaxy_storage_path | default(_galaxy_root + '/datadir', true) }}" # component variable src_galaxy_storage_path
galaxy_commit_id: release_{{ src_galaxy_version | default('25.0', true) }} # component variable src_galaxy_version
galaxy_tusd_port: 8002
galaxy_tus_upload_store: "{{ galaxy_mutable_data_dir }}/tus_data"
galaxy_separate_privileges: true
galaxy_create_user: true
galaxy_manage_paths: true
galaxy_clone_depth: 1
galaxy_user: galaxy
galaxy_privsep_user: gxpriv
galaxy_group: galaxy
galaxy_client_use_prebuilt: true
galaxy_systemd_root: true
galaxy_backup_configfiles: false

# Defining the variables for galaxy/config
user_preference_config_file: "{{ galaxy_config_dir }}/user_preferences_extra_conf.yml"
job_config_file: "{{ galaxy_config_dir }}/job_conf.yml"
pulsar_config_file: "{{ galaxy_config_dir }}/pulsar_app.yml"
container_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"

# see https://docs.galaxyproject.org/en/latest/admin/dependency_resolvers.html#default-dependency-resolvers
galaxy_dependency_resolvers:
  - type: tool_shed_packages
  - type: galaxy_packages
  - type: conda
  - type: galaxy_packages
    versionless: true
  - type: conda
    versionless: true


# Galaxy config templates
galaxy_config_templates:
  - src: templates/galaxy/config/user_preferences_extra_conf.yml.j2
    dest: "{{ user_preference_config_file }}"
  - src: templates/galaxy/config/job_conf.yml.j2
    dest: "{{ job_config_file }}"
  - src: templates/galaxy/config/pulsar_app.yml.j2
    dest: "{{ pulsar_config_file }}"
  - src: templates/galaxy/config/container_resolvers_conf.yml.j2
    dest: "{{ container_resolvers_config_file }}"
# Additional Galaxy config files
galaxy_config_files:
  - src: templates/themes.yml
    dest: "{{ galaxy_config.galaxy.themes_config_file }}"
postgresql_objects_users:
  - name: galaxy
    password:
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy

# Galaxy configuration section
galaxy_configuration:
  galaxy:
    brand: "{{ _galaxy_brand }}"
    logo_src: "https://www.ictopen.nl/sites/ict_open/files/styles/max_1300x1300/public/media-images/Logo%20SURF%20groot_0.png?itok=7aw8DXCZ"
    themes_config_file: "{{ galaxy_config_dir }}/themes.yml"
    support_url: "https://servicedesk.surf.nl/jira/plugins/servlet/samlsso?redirectTo=%2Fsecure%2FMyJiraHome.jspa"
    terms_url: "https://www.surf.nl/en/surf-legal-framework-of-standards-cloud-services"
    use_remote_user: true
    allow_user_creation: true
    allow_user_deletion: true
    admin_users: "{{ _galaxy_admins }}"
    remote_user_maildomain: "{{ _galaxy_remote_user_maildomain }}"
    remote_user_secret: "{{ _galaxy_remote_user_secret }}"
    database_connection: postgresql:///galaxy?host=/var/run/postgresql
    file_path: "{{ galaxy_mutable_data_dir }}/datasets"
    job_config_file: "{{ job_config_file }}"
    tool_config_file: "{{ galaxy_config_dir }}/tool_conf.xml"
    user_preferences_extra_conf_path: "{{ user_preference_config_file }}"
    interactivetools_enable: "{{ _galaxy_use_interactive_tools }}"
    interactivetools_map: "{{ _galaxy_use_interactive_tools | ternary(gie_proxy_sessions_path, omit) }}"
    galaxy_infrastructure_url: "{{ _galaxy_infrastructure_url }}"
    tus_upload_store: "{{ _galaxy_enable_tus | ternary(galaxy_tus_upload_store, omit) }}"
    outputs_to_working_directory: "{{ _galaxy_use_interactive_tools }}"
    bootstrap_admin_api_key: "{{ _galaxy_bootstrap_api_key | default(omit) }}"
    nginx_x_accel_redirect_base: '/_x_accel_redirect'
    # CVMFS
    tool_data_table_config_path: "{{ _galaxy_enable_cvmfs | ternary((cvmfs_tool_data_tables | join(',')), omit) }}"
    container_resolvers_config_file: "{{ container_resolvers_config_file }}"
    expose_dataset_path: true
    expose_potentially_sensitive_job_metrics: true
    expose_user_name: true
    # Celery support
    enable_celery_tasks: true
    amqp_internal_connection: "sqlalchemy+postgresql:///galaxy?host=/var/run/postgresql"
    celery_conf:
      broker_url: null
      result_backend: "db+postgresql:///galaxy?host=/var/run/postgresql"
      task_routes:
        galaxy.fetch_data: galaxy.external
        galaxy.set_job_metadata: galaxy.external

  gravity:
    galaxy_root: "{{ galaxy_server_dir }}"
    galaxy_user: "{{ galaxy_user }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    process_manager: systemd

    tusd:
      enable: "{{ _galaxy_enable_tus }}"
      tusd_path: /usr/local/sbin/tusd
      upload_dir: "{{ galaxy_tus_upload_store }}"
      port: "{{ galaxy_tusd_port }}"

    gunicorn:
      # Listening options
      bind: "{{ _galaxy_local_address }}"
      # Performance options
      workers: 2
      # Extra args passed to Gunicorn
      # Other options that will be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      extra_args: --forwarded-allow-ips="*"
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true

    celery:
      concurrency: 2
      enable_beat: true
      enable: true
      queues: celery,galaxy.internal,galaxy.external
      pool: threads
      memory_limit: 2
      loglevel: DEBUG

    gx_it_proxy:
      enable: "{{ _galaxy_use_interactive_tools }}"
      port: "{{ gie_proxy_port }}"
